#!/usr/bin/env bash

# Use Gitâ€™s colored diff when available
hash git &>/dev/null;
if [ $? -eq 0 ]; then
  function diff() {
    git diff --no-index --color-words "$@";
  }
fi;

# scp functions
function cp2katana() # Copy to katana using kdm (katana data manager)
{
  scp -r $1 z3319805@kdm.restech.unsw.edu.au:/home/z3319805/$2
}
function cpfromkatana() # Copy from katana using kdm (katana data manager)
{
  scp -r z3319805@kdm.restech.unsw.edu.au:/home/z3319805/$1 $2
}
function cptogadi() # Copy from gadi
{
  scp -r $1 bp3051@gadi-dm.nci.org.au:$2
}
function cpfromgadi() # Copy from gadi
{
  scp -r bp3051@gadi-dm.nci.org.au:$1 $2
}
function rsynctogadi()
{
  rsync -avPS $1 bp3051@gadi-dm.nci.org.au:$2
}
function rsyncfromgadi()
{
  rsync -avPS bp3051@gadi-dm.nci.org.au:$1 $2
}

# Normalize `open` across Linux, macOS, and Windows.
# This is needed to make the `o` function (see below) cross-platform.
if [ ! $(uname -s) = 'Darwin' ]; then
	if grep -q Microsoft /proc/version; then
		# Ubuntu on Windows using the Linux subsystem
		alias open='explorer.exe';
	else
		alias open='xdg-open';
	fi
fi

# `o` with no arguments opens the current directory, otherwise opens the given
# location
function o() {
	if [ $# -eq 0 ]; then
		open .;
	else
		open "$@";
	fi;
}

# Pretty CSV tables
# from https://www.stefaanlippens.net/pretty-csv.html
function pretty_csv {
  column -t -s, -n "$@" | less -F -S -X -K
}
function pretty_csv {
  perl -pe 's/((?<=,)|(?<=^)),/ ,/g;' "$@" | column -t -s, | less  -F -S -X -K
}

# List files like ls but with git timestamps:
function gls() {
  for f in $(ls -a | grep -f <(git ls-files | sed 's/\/.*//g' | sort | uniq)); do
    git --no-pager log --color -1 --date=short --pretty=format:'%C(cyan)%ai%Creset' -- $f;
    echo  " $f";
  done | sort -r
}
